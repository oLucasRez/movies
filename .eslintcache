[{"E:\\movies\\src\\index.tsx":"1","E:\\movies\\src\\reportWebVitals.ts":"2","E:\\movies\\src\\App.tsx":"3","E:\\movies\\src\\services\\tmdb.ts":"4","E:\\movies\\src\\components\\Body\\index.tsx":"5","E:\\movies\\src\\components\\Card\\index.tsx":"6","E:\\movies\\src\\mock\\movie.ts":"7","E:\\movies\\src\\utils\\getGenresByIDs.ts":"8"},{"size":500,"mtime":1611881807312,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1611873144104,"results":"11","hashOfConfig":"10"},{"size":255,"mtime":1612020297784,"results":"12","hashOfConfig":"10"},{"size":3774,"mtime":1612016903499,"results":"13","hashOfConfig":"10"},{"size":802,"mtime":1612013246805,"results":"14","hashOfConfig":"10"},{"size":354,"mtime":1611955276171,"results":"15","hashOfConfig":"10"},{"size":915,"mtime":1611953681717,"results":"16","hashOfConfig":"10"},{"size":1334,"mtime":1612020195676,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"nainie",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\movies\\src\\index.tsx",[],["36","37"],"E:\\movies\\src\\reportWebVitals.ts",[],"E:\\movies\\src\\App.tsx",[],"E:\\movies\\src\\services\\tmdb.ts",["38"],"E:\\movies\\src\\components\\Body\\index.tsx",["39"],"import { useEffect, useState } from 'react';\r\n\r\nimport IMovie from '../../interfaces/IMovie';\r\n\r\nimport Card from '../Card';\r\n\r\n// import { searchMovies } from '../../services/tmdb';\r\n\r\nimport './styles.css';\r\n//=============================================================================\r\nconst Body = () => {\r\n  const [movies, setMovies] = useState<IMovie[]>([]);\r\n\r\n  useEffect(() => {\r\n    // searchMovies('thor').then((_movies) => {\r\n    //   setMovies(_movies);\r\n    // });\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"body-container\">\r\n      <input\r\n        className=\"title\"\r\n        placeholder=\"Busque um filme por nome, ano ou gÃªnero\"\r\n      />\r\n      {movies.map((movie, index) => (\r\n        <Card key={index} movie={movie} />\r\n      ))}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","E:\\movies\\src\\components\\Card\\index.tsx",[],"E:\\movies\\src\\mock\\movie.ts",[],"E:\\movies\\src\\utils\\getGenresByIDs.ts",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":79,"column":10,"nodeType":"46","messageId":"47","endLine":79,"endColumn":20},{"ruleId":"44","severity":1,"message":"48","line":12,"column":18,"nodeType":"46","messageId":"47","endLine":12,"endColumn":27},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"@typescript-eslint/no-unused-vars","'parseMovie' is defined but never used.","Identifier","unusedVar","'setMovies' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]