[{"E:\\movies\\src\\index.tsx":"1","E:\\movies\\src\\reportWebVitals.ts":"2","E:\\movies\\src\\App.tsx":"3","E:\\movies\\src\\services\\tmdb.ts":"4","E:\\movies\\src\\components\\Body\\index.tsx":"5","E:\\movies\\src\\components\\Card\\index.tsx":"6","E:\\movies\\src\\mock\\movie.ts":"7","E:\\movies\\src\\services\\util\\TMDBRoute.ts":"8"},{"size":500,"mtime":1611881807312,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1611873144104,"results":"11","hashOfConfig":"10"},{"size":255,"mtime":1612013345661,"results":"12","hashOfConfig":"10"},{"size":2500,"mtime":1611955075759,"results":"13","hashOfConfig":"10"},{"size":802,"mtime":1612013246805,"results":"14","hashOfConfig":"10"},{"size":354,"mtime":1611955276171,"results":"15","hashOfConfig":"10"},{"size":915,"mtime":1611953681717,"results":"16","hashOfConfig":"10"},{"size":119,"mtime":1612013156414,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"nainie",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\movies\\src\\index.tsx",[],["37","38"],"E:\\movies\\src\\reportWebVitals.ts",[],"E:\\movies\\src\\App.tsx",[],"E:\\movies\\src\\services\\tmdb.ts",["39","40"],"import axios from 'axios';\r\nimport 'dotenv/config';\r\nimport IGenre from '../interfaces/IGenre';\r\n\r\nimport IMovie from '../interfaces/IMovie';\r\nimport IMovieResponse from '../interfaces/IMovieResponse';\r\nimport ISpokenLanguages from '../interfaces/ISpokenLanguages';\r\n\r\nimport movieMock from '../mock/movie';\r\n\r\nconst tmdb = axios.create({\r\n  baseURL: `https://api.themoviedb.org/3`\r\n});\r\n\r\nexport async function searchMovies(\r\n  search: string,\r\n  page?: number\r\n): Promise<IMovie[]> {\r\n  return [movieMock, movieMock, movieMock];\r\n\r\n  // const apiKey = process.env.REACT_APP_API_KEY;\r\n\r\n  // const res: IMovieResponse = (\r\n  //   await tmdb.get<IMovieResponse>(`movie/284053?api_key=${apiKey}&language=pt`)\r\n  // ).data;\r\n\r\n  // const movie = parseMovie(res);\r\n\r\n  // // tmdb\r\n  // //   .get<IMovieResponse>(`movie/284053?api_key=${apiKey}`)\r\n  // //   .then(({ data }) => {\r\n  // //     res = parseMovie(data);\r\n  // //   });\r\n\r\n  // // tmdb\r\n  // //   .get(`search/movie?api_key=${apiKey}&query=${search}&page=${page ?? 1}`)\r\n  // //   .then((res) => {\r\n  // //     console.log(res.data);\r\n  // //   });\r\n\r\n  // return movie;\r\n}\r\n//-----------------------------------------------------------------------------\r\nfunction parseMovie(res: IMovieResponse): IMovie {\r\n  return {\r\n    posterPath: getImage(res.poster_path),\r\n    title: res.title,\r\n    voteAverage: res.vote_average,\r\n    releaseDate: res.release_date,\r\n    overview: res.overview,\r\n    genres: getGenreNames(res.genres),\r\n    status: res.status,\r\n    languages: getLanguageNames(res.spoken_languages),\r\n    runtime: res.runtime,\r\n    budget: res.budget,\r\n    revenue: res.revenue\r\n  };\r\n}\r\n//-----------------------------------------------------------------------------\r\nfunction getImage(path?: string): string | undefined {\r\n  return path ? `https://image.tmdb.org/t/p/w500${path}` : undefined;\r\n}\r\n//-----------------------------------------------------------------------------\r\nfunction getGenreNames(genres?: IGenre[]): string[] | undefined {\r\n  if (!genres) return;\r\n\r\n  let genresName: string[] = [];\r\n\r\n  genres.forEach((genre) => genresName.push(genre.name));\r\n\r\n  return genresName;\r\n}\r\n//-----------------------------------------------------------------------------\r\nfunction getLanguageNames(\r\n  languages?: ISpokenLanguages[]\r\n): string[] | undefined {\r\n  if (!languages) return;\r\n\r\n  let languagesName: string[] = [];\r\n\r\n  languages.forEach((language) => languagesName.push(language.name));\r\n\r\n  return languagesName;\r\n}\r\n",["41","42"],"E:\\movies\\src\\components\\Body\\index.tsx",["43"],"E:\\movies\\src\\components\\Card\\index.tsx",[],"E:\\movies\\src\\mock\\movie.ts",[],"E:\\movies\\src\\services\\util\\TMDBRoute.ts",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":11,"column":7,"nodeType":"50","messageId":"51","endLine":11,"endColumn":11},{"ruleId":"48","severity":1,"message":"52","line":44,"column":10,"nodeType":"50","messageId":"51","endLine":44,"endColumn":20},{"ruleId":"44","replacedBy":"53"},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","severity":1,"message":"55","line":12,"column":18,"nodeType":"50","messageId":"51","endLine":12,"endColumn":27},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"@typescript-eslint/no-unused-vars","'tmdb' is assigned a value but never used.","Identifier","unusedVar","'parseMovie' is defined but never used.",["56"],["57"],"'setMovies' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]